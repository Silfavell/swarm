version: '3.5'

services:
  mongo1:
    image: mongo
    command: mongod --replSet "rs0"
    deploy:
      placement:
        constraints:
          - node.Role==Manager
    volumes:
      - mongo-data:/data/db
    networks:
      sil:
        aliases: 
          - mongo

  mongo2:
    image: mongo
    command: mongod --replSet "rs0"
    deploy:
      placement:
        constraints:
          - node.Role==Worker
    volumes:
      - mongo-data:/data/db
    networks:
      sil:
        aliases: 
          - mongo

  mongo3:
    image: mongo
    command: mongod --replSet "rs0"
    deploy:
      placement:
        constraints:
          - node.Role==Worker
    volumes:
      - mongo-data:/data/db
    networks:
      sil:
        aliases: 
          - mongo

  elasticsearch:
    image: elasticsearch:7.1.1
    hostname: elasticsearch
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - cluster.name="{{.Node.Hostname}}"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - discovery.seed_hosts=ubuntu1,ubuntu2
      - cluster.initial_master_nodes=ubuntu1,ubuntu2
      - node.ml=false
      - xpack.ml.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - bootstrap.memory_lock=false
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - sil
    deploy:
      model: global
      placement:
        constraints: [node.labels.host == ubuntu]
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s

  backend:
    image: backend
    ports:
      - 3000:3000
    volumes:
      - /mnt:/public/assets/products
      - ~/logs:/logs
    command: npm start
    networks:
      - sil
    deploy:
      mode: global
      placement:
        constraints: [node.labels.host == ubuntu]
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s

  web:
    image: web
    ports:
      - 80:80
      - 443:443
    networks:
      - sil
    deploy:
      mode: global
      placement:
        constraints: [node.labels.host == ubuntu]

  manager:
    image: manager
    ports:
      - 5000:5000
    command: npm start
    networks:
      - sil
    deploy:
      mode: global
      placement:
        constraints: [node.labels.host == ubuntu]
    
  admin:
    image: admin
    ports:
      - 6767:6767
    command: npm start
    networks:
      - sil
    deploy:
      mode: global
      placement:
        constraints: [node.labels.host == ubuntu]

networks:
  sil:
    name: sil

volumes:
  elasticsearch-data:

  mongo-data:
